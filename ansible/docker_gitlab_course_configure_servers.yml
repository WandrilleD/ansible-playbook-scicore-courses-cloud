---

- name: Configure machines for the Docker/Gitlab course
  hosts: all
  become: yes
  gather_facts: yes
  remote_user: centos

  vars:

    users_default_group: "course"  # this is the default group for all the user accounts
    users_accounts_to_create: 1   # how many user accounts to create
    users_password: "$6$cCYAsI/C$sPnN7MXy2WM5v8l.xDrYnggHgky2LqkDzOAPCpmSZnx80cVwJnSQVzba91wUjAMpbqAFVELpIME/n3jmrjV1q/"

    git_repo_local_path: /home/user01/cathsm-client

  tasks:

    - name: Waiting for the machine to be online
      wait_for_connection:

    # - name: set hostname as defined in inventory
    #   hostname:
    #     name: "{{ hostvars[inventory_hostname].inventory_hostname }}"

    - name: Install epel repository
      package:
        name: epel-release
        state: installed
      tags: epel

    - name: Make sure that selinux is disabled
      import_role:
        name: pescobar.selinux_disable
      vars:
        selinux_reboot: true
      tags: selinux

    - name: Configure chrony for time sync
      import_role:
        name: frzk.chrony
      tags: chrony

    - name: Install some basic packages
      package:
        name:
          - vim
          - emacs-nox
          - git
          - htop
          - bash-completion
        state: installed
      tags: upgrade

    - name: Install docker
      import_role:
        name: geerlingguy.docker

    - name: Install gitlab-runner
      import_role:
        name: riemers.gitlab-runner

    - name: Create a default group {{ users_default_group }} for every user
      group:
        name: "{{ users_default_group }}"
        gid: 2000
        state: present

    - name: Create the user accounts and add them to docker group (starting with uid 2001)
      user:
        name: "user{{ item }}"
        uid: "20{{ item }}"
        group: "{{ users_default_group }}"
        groups:
          - docker
          - wheel
        home: "/home/user{{ item }}"
        create_home: yes
        shell: /bin/bash
        update_password: always
        password: "{{ users_password }}"
        state: present
        # generate_ssh_key: no
        # ssh_key_comment: "user{{item}}_slurm_cluster@ansible-generated"
        # ssh_key_file: .ssh/id_rsa
        # ssh_key_type: rsa
      with_sequence: "count={{ users_accounts_to_create }} format=%02u"

    - name: Enable password login for ssh
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PasswordAuthentication no$"
        line: "PasswordAuthentication yes"
        backrefs: yes
      notify: restart sshd

    - name: Add required public ssh keys to user centos
      authorized_key:
        user: centos
        key: "{{ item }}"
      loop:
        - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIC7iFrhplBHPXG5wxEYAliB6J3yT3gUdna04UMk3NQem jsurkont"
        - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIALrjUYG1lxgGo9BbsUPmLu23ldompQJYmqLEnv4hXLT"

    - name: Add centos user to docker group
      user:
        name: centos
        groups: docker
        append: yes

    - name: Add gitlab-runner user to docker group
      user:
        name: gitlab-runner
        groups: docker
        append: yes
      notify: restart gitlab-runner

    - name: Install python36-virtualenv
      yum:
        name: python36-virtualenv
        state: installed

    - name: user01 | Clone the client git repo
      git:
        repo: https://github.com/CATH-SWISSMODEL/cathsm-client.git
        dest: "{{ git_repo_local_path }}"
        version: master
      become: yes
      become_user: user01

    - name: Create the venv for the client
      pip:
        name: git+https://github.com/CATH-SWISSMODEL/cathsm-client.git
        virtualenv: "{{ git_repo_local_path }}/venv"
        virtualenv_command: virtualenv-3
        # requirements: "{{ git_repo_local_path }}/venv"
      become: yes
      become_user: user01

    - name: Create config folder ~/.config/cath-swissmodel-api/
      file:
        path: ~/.config/cath-swissmodel-api/
        state: directory
        mode: 0755
      become: yes
      become_user: user01

    - name: Download ~/.config/cath-swissmodel-api/config.ini
      get_url:
        url: https://git.scicore.unibas.ch/bienert/cathsm-server-sibdays2020ed/-/raw/master/example_data/config.ini
        dest: ~/.config/cath-swissmodel-api/config.ini
      become: yes
      become_user: user01

    - name: Create folder ~/example_seqs
      file:
        path: ~/example_seqs
        state: directory
        mode: 0755
      become: yes
      become_user: user01

    - name: Download example seqs to folder ~/example_seqs
      get_url:
        url: "https://git.scicore.unibas.ch/bienert/cathsm-server-sibdays2020ed/-/raw/master/example_data/{{ item }}"
        dest: ~/example_seqs/
      loop:
        - P09904.fas
        - P61851.fas
        - P09905.fas
        - P0DTC7.fas
        - sample.fas
      become: yes
      become_user: user01

    # - name: user01 | Clone the client git repo
    #   git:
    #     repo: https://git.scicore.unibas.ch/bienert/cathsm-server-sibdays2020ed.git
    #     dest: /tmp//cathsm-server-sibdays2020ed
    #   become: yes
    #   become_user: user01

    # - name: user01 | Copy example seqs to home folder
    #   copy:
    #     src: /tmp/cathsm-server-sibdays2020ed/example_data/*.fas
    #     dest: ~/example_seqs/
    #     remote_src: yes
    #   become: yes
    #   become_user: user01

    # - name: Copy config.ini to ~/.config/cath-swissmodel-api/
    #   copy:
    #     src:
    #     dest: /etc/sudoers.edit
    #     remote_src: yes
    #     path: ~/.config/cath-swissmodel-api/
    #     state: directory
    #   become: yes
    #   become_user: user01

  handlers:

    - name: restart sshd
      service:
        name: sshd
        state: restarted

    - name: restart gitlab-runner
      service:
        name: gitlab-runner
        state: restarted
