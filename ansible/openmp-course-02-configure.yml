---

- name: Configure machines for the OpenMP course
  hosts: openmp_course
  become: yes
  gather_facts: yes

  tasks:

    - name: Waiting for the machine to be online
      wait_for_connection:

    - name: Configure NTP time
      ansible.builtin.import_role:
        name: geerlingguy.ntp

    - name: Add EPEL yum repo | RedHat
      ansible.builtin.package:
        name: epel-release
        state: installed
      when: ansible_os_family == 'RedHat'

    - name: Disable SElinux in RedHat systems
      ansible.builtin.import_role:
        name: pescobar.selinux_disable
      vars:
        selinux_disable_reboot: true
      when: ansible_os_family == 'RedHat'

    - name: Install some basic packages defined in variable 'openmp_course_packages_to_install'
      ansible.builtin.package:
        name: "{{ openmp_course_packages_to_install }}"

    - name: Configure sshd to allow password authentication
      ansible.builtin.import_role:
        name: willshersystems.sshd
      vars:
        sshd:
          PasswordAuthentication: yes

    - name: Upgrade all the packages (if configured)
      ansible.builtin.yum:
        name: '*'
        state: latest
      when:
        - openmp_course_upgrade_all_packages
        - ansible_os_family == 'RedHat'

    # we are going to configure fail2ban so we want a firewall
    - name: Install and then start/enable firewalld
      block:

        - name: Install firewalld
          package:
            name: firewalld
            state: installed

        - name: Start and enable and firewalld
          service:
            name: firewalld
            state: started
            enabled: yes

    - name: Create a default group {{ users_default_group }} for every user
      group:
        name: "{{ openmp_course_users_default_group }}"
        gid: 2000
        state: present

    - name: Create the user accounts (starting with uid 2001)
      user:
        name: "user{{ item }}"
        uid: "20{{ item }}"
        group: "{{ openmp_course_users_default_group }}"
        home: "/home/user{{ item }}"
        create_home: yes
        shell: /bin/bash
        update_password: always
        password: "{{ openmp_course_users_password }}"
        state: present
      with_sequence: "count={{ openmp_course_users_accounts_to_create }} format=%02u"

    - name: Query the size of the root partition in MB
      shell: |
        set -o pipefail
        df -m / | awk {'print $2'} |tail -1
      register: _root_partition_disk_size
      args:
        executable: /bin/bash
      changed_when: false

    - name: Set a variable in MB with the disk size we will use for CVMFS cache (30% of root partition)
      set_fact:
        cvmfs_cache_size: "{{ ( _root_partition_disk_size.stdout|int * 0.5) | int }}"

    - name: Configure the CVMFS client to access the ComputeCanada soft stack
      import_role:
        name: ansible-cvmfs-client
      vars:
        cvmfs_client_configure_storage: false
        cvmfs_http_proxy: "DIRECT"

    - name: Deploy file /etc/modulerc to define "StdEnv/2020" as default StdEnv in the ComputeCanada software stack
      ansible.builtin.copy:
        dest: /etc/modulerc
        owner: root
        group: root
        mode: 0644
        content: |
          #
          # ansible managed
          #
          module-version StdEnv/2020 default

    - name: Create profile file to enable the ComputeCanada software stack on login
      ansible.builtin.copy:
        dest: /etc/profile.d/compute_canada.sh
        owner: root
        group: root
        mode: 0644
        content: |
          #
          # ansible managed
          #
          # we create all students accounts with uid>2000
          # and we only enable the software stack by default for them
          if [ "$UID" -ge 2000 ]; then
              if [ -f /cvmfs/soft.computecanada.ca/config/profile/bash.sh ]; then
                  export MODULERCFILE=/etc/modulerc
                  source /cvmfs/soft.computecanada.ca/config/profile/bash.sh &> /dev/null
                  #module load gcc/9.1.0 python/3.8.2 &> /dev/null
              fi
          fi

    - name: Launch process in background to prewarm the computeCanada cache in local disk
      shell: source /cvmfs/soft.computecanada.ca/config/profile/bash.sh; module av
      async: 2592000               # 60*60*24*30 â€“ 1 month
      poll: 0
      args:
        executable: /bin/bash
      when: local_prewarm_compute_canada_software_stack_cache

    - name: Create profile file to define OMP_NUM_THREADS on login
      ansible.builtin.copy:
        dest: /etc/profile.d/openmp.sh
        owner: root
        group: root
        mode: 0644
        content: |
          #
          # ansible managed
          #
          export OMP_NUM_THREADS=4

    - name: Configure cgroups to limit memory by user
      import_role:
        name: pescobar.cgroups_mem_limit
      tags: cgroups

    - name: Install and enable fail2ban
      import_role:
        name: robertdebock.fail2ban
      tags: fail2ban

    - name: Add the teacher's ssh public keys to the centos account in login node
      authorized_key:
        user: "centos"
        key: "{{ item }}"
      loop: "{{ local_teachers_ssh_keys }}"
      tags: ssh_keys_teachers
