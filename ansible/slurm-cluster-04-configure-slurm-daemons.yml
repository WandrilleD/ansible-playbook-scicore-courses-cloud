---

- name: Configure slurm cluster (slurm master and slurm workers)
  hosts:
    - slurm_master
    - slurm_login
    - slurm_compute
  gather_facts: true
  become: true
  remote_user: "{{ local_ssh_remote_user }}"

  tasks:

    - name: Add OpenHPC repositories
      ansible.builtin.yum:
        name: "{{ local_ohpc_repos_url }}"
        state: installed

    - name: Install OpenHPC runtime Slurm packages
      ansible.builtin.yum:
        name:
          - "slurm-ohpc"
          - "munge-ohpc"
          - "slurm-example-configs-ohpc"
        state: present

    - name: Ensure the Slurm spool directory exists
      ansible.builtin.file:
        path: /var/spool/slurm
        owner: slurm
        group: slurm
        mode: 0755
        state: directory

    - name: Ensure the Slurm log directory exists
      ansible.builtin.file:
        path: /var/log/slurm
        owner: slurm
        group: slurm
        mode: 0755
        state: directory

    - name: Generate a Munge key for the cluster (in slurm master machine)
      ansible.builtin.command: "dd if=/dev/urandom of=/etc/munge/munge.key bs=1 count=1024"
      args:
        creates: "/etc/munge/munge.key"
      when: "'slurm_master' in group_names"

    - name: Retrieve Munge key from Slurm master host
      ansible.builtin.slurp:
        src: "/etc/munge/munge.key"
      register: _slurm_munge_key
      when: "'slurm_master' in group_names"

    - name: Write Munge key to every machine
      ansible.builtin.copy:
        content: "{{ hostvars[groups.slurm_master[0]]['_slurm_munge_key']['content'] | b64decode }}"
        dest: "/etc/munge/munge.key"
        owner: munge
        group: munge
        mode: 0400
      notify:
        - Restart Munge service

    - name: Start and enable munge service
      ansible.builtin.service:
        name: munge
        state: started
        enabled: true

    - name: Apply customised SLURM configuration
      ansible.builtin.template:
        src: slurm.conf.j2
        dest: /etc/slurm/slurm.conf
        owner: root
        group: root
        mode: 0644
      notify: Restart SLURM service
      tags: slurm_config

    - name: Create local /scratch folder with permission 777
      ansible.builtin.file:
        path: /scratch
        state: directory
        mode: 0777
        owner: root
        group: root


    - name: Install and configure slurm accounting daemon
      block:

        - name: install mariadb-server rpm
          ansible.builtin.yum:
            name: mariadb-server
            state: installed

        - name: Enable and start mariadb server
          ansible.builtin.service:
            name: mariadb
            state: started
            enabled: true

        - name: install MySQL-python rpm (required by ansible)
          ansible.builtin.yum:
            name: MySQL-python
            state: installed

        - name: create mysql db for accounting
          community.mysql.mysql_db:
            name: "{{ local_slurmdbd_mysql_db }}"
            state: present

        - name: create mysql account for slurm accounting daemon
          community.mysql.mysql_user:
            name: "{{ local_slurmdbd_mysql_user }}"
            password: "{{ local_slurmdbd_mysql_password }}"
            priv: '{{ local_slurmdbd_mysql_db }}.*:ALL'
            state: present

        - name: install slurm accounting daemon from OpenHPC (slurm-slurmdbd-ohpc rpm)
          ansible.builtin.yum:
            name: slurm-slurmdbd-ohpc
            state: installed

        - name: deploy slurm accounting config file
          ansible.builtin.template:
            dest: /etc/slurm/slurmdbd.conf
            src: slurmdbd.conf.j2
            owner: root
            group: root
            mode: 0644
          notify: Restart slurmdbd service
          tags: slurm_config

        - name: Enable and start slurmdbd
          ansible.builtin.service:
            name: slurmdbd
            state: started
            enabled: true
          register: _enable_start_slurmdbd

        - name: Wait 15secs to let slurmdbd boot if this is the first time it boots
          ansible.builtin.pause:
            seconds: 15
          when: _enable_start_slurmdbd.changed

        - name: Check if the cluster is registered in accounting db
          ansible.builtin.shell: sacctmgr list cluster --noheader --parsable | wc -l
          register: _sacctmgr_output
          changed_when: false

        # - debug:
        #     var: _sacctmgr_output

        # if previous command return 0 lines it's because no cluster is registered
        # We assume that no other clusters are re
        - name: Register the cluster in accounting db
          ansible.builtin.command: sacctmgr add cluster slurm_cluster --immediate
          when: _sacctmgr_output.stdout == "0"

      when: "'slurm_master' in group_names"


    - name: Install and configure slurm master daemon
      block:

        - name: Install slurm master rpms
          ansible.builtin.yum:
            name:
              - "@ohpc-slurm-server"
              - "slurm-slurmctld-ohpc"
              - "slurm-example-configs-ohpc"
            state: installed

        - name: Deploy /etc/slurm/job_submit.lua
          ansible.builtin.template:
            dest: /etc/slurm/job_submit.lua
            src: job_submit.lua.j2
            owner: root
            group: root
            mode: 0755
          tags: slurm_config

        - name: Start and enable slurm master daemon
          ansible.builtin.service:
            name: slurmctld
            state: started
            enabled: true

      when: "'slurm_master' in group_names"


    - name: Configure slurm worker daemons
      block:

        - name: Install OpenHPC slurmd
          ansible.builtin.yum:
            name:
              - "slurm-slurmd-ohpc"
            state: present

        - name: Install cgroups if this is a worker host
          ansible.builtin.yum:
            name:
              - libcgroup
              - libcgroup-tools
            state: present

        - name: deploy /etc/slurm/cgroup.conf
          ansible.builtin.template:
            dest: /etc/slurm/cgroup.conf
            src: cgroup.conf.j2
            owner: root
            group: root
            mode: 0644
          notify: Restart SLURM service
          tags: slurm_config

        - name: enable and start cgroup services if this is a worker_node
          ansible.builtin.service:
            name: "{{ item }}"
            enabled: true
            state: started
          with_items:
            - cgred
            - cgconfig

        - name: Install slurm worker rpms
          ansible.builtin.yum:
            name:
              - "@ohpc-base-compute"
              - "@ohpc-slurm-client"
            state: installed

        - name: Start and enable slurm worker daemon
          ansible.builtin.service:
            name: slurmd
            state: started
            enabled: true

      when: "'slurm_compute' in group_names"


  handlers:

    - name: Restart Munge service
      ansible.builtin.service:
        name: munge
        state: restarted

    - name: Restart slurmctld service
      listen: Restart SLURM service
      ansible.builtin.service:
        name: slurmctld
        state: restarted
      when: "'slurm_master' in group_names"

    - name: Restart slurmd service
      listen: Restart SLURM service
      ansible.builtin.service:
        name: slurmd
        state: restarted
      when: "'slurm_compute' in group_names"

    - name: Restart slurmdbd service
      ansible.builtin.service:
        name: slurmdbd
        state: restarted
      when: "'slurm_master' in group_names"
